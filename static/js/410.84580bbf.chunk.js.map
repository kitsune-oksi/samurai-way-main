{"version":3,"file":"static/js/410.84580bbf.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/Users/User.module.css?abcc","Components/common/Pagination/Pagination.tsx","Components/Users/User.tsx","Components/Users/Users.tsx","Components/Users/UsersContainer.tsx","Components/common/Button/Button.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"User_userPhoto__4BOA5\",\"selectedPage\":\"User_selectedPage__4VMu2\",\"paginator\":\"User_paginator__QgdhD\"};","import styles from \"../../Users/User.module.css\";\nimport React, {useState} from \"react\";\nimport {Button} from \"../Button/Button\";\n\nexport const Pagination: React.FC<PropsType> = ({\n                                                    totalItemsCount,\n                                                    pageSize,\n                                                    currentPage,\n                                                    portionSize = 10,\n                                                    onPageChanged\n                                                }) => {\n    const pageCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pageCount / portionSize);\n    const [portionNumber, setPortionNumber] = useState(1);\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 && <Button title={'PREV'} callback={() => setPortionNumber(portionNumber - 1)}/>}\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p, index) => {\n                return <span key={index} className={p === currentPage ? styles.selectedPage : ''}\n                             onClick={() => {\n                                 onPageChanged(p)\n                             }}>{p} </span>\n            })}\n        {portionCount > portionNumber && <Button title={'NEXT'} callback={() => setPortionNumber(portionNumber + 1)}/>}\n    </div>\n}\n\ntype PropsType = {\n    totalItemsCount: number,\n    pageSize: number,\n    currentPage: number,\n    portionSize: number,\n    onPageChanged: (pageNumber: number) => void\n}","import {NavLink} from \"react-router-dom\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport styles from \"./User.module.css\";\nimport React from \"react\";\n\nexport const User: React.FC<PropsType> = ({id, photos, name, followingProgress, followed, unfollow, follow}) => {\n    return <div>\n        <div>\n            <NavLink to={'/profile/' + id}>\n                <img src={photos.small !== null ? photos.small : userPhoto} alt='avatar'\n                     className={styles.userPhoto}/>\n            </NavLink>\n        </div>\n        <div>\n            <div>{name}</div>\n        </div>\n        <div>\n            {followed ? <button disabled={followingProgress.some((id) => id === id)} onClick={() => {\n                    unfollow(id)\n                }}\n                >Unfollow</button> :\n                <button disabled={followingProgress.some(id => id === id)} onClick={() => {\n                    follow(id)\n                }\n                }>Follow</button>}\n        </div>\n    </div>\n}\n\ntype PropsType = {\n    id: number\n    photos: {\n        small: null | string\n        large: null | string\n    }\n    name:string\n    followingProgress: (number | null)[]\n    followed: boolean\n    unfollow: (userID: number) => void\n    follow: (userID: number) => void\n}","import React from \"react\";\nimport {UserType} from \"../../state/UsersReducer\";\nimport {Pagination} from \"../common/Pagination/Pagination\";\nimport {User} from \"./User\";\n\nexport const Users: React.FC<UsersPropsType> = ({\n                                                    totalUsersCount,\n                                                    pageSize,\n                                                    currentPage,\n                                                    onPageChanged,\n                                                    users,\n                                                    unfollow,\n                                                    follow,\n                                                    followingProgress,\n                                                }) => {\n    return <div>\n        <Pagination totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                    onPageChanged={onPageChanged} portionSize={20}/>\n        {users.map((u) => <User key={u.id} id={u.id} name={u.name} followingProgress={followingProgress} followed={u.followed}\n                                follow={follow} unfollow={unfollow} photos={u.photos}/>)}\n    </div>\n}\n\n//types\ntype UsersPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    users: UserType[]\n    unfollow: (userID: number) => void\n    follow: (userID: number) => void\n    followingProgress: Array<null | number>\n}","import {connect} from \"react-redux\";\nimport {RootState} from \"../../state/store\";\nimport {\n    follow,\n    UsersPageType,\n    getUsers,\n    unfollow\n} from \"../../state/UsersReducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\n\nclass UsersContainer extends React.Component<UsersType, RootState> {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged(pageNumber: number) {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching && <Preloader/>}\n            <Users users={this.props.users}\n                   totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged.bind(this)}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   followingProgress={this.props.followingProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state: RootState): UsersPageType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        isFollowing: state.usersPage.isFollowing,\n        followingProgress: state.usersPage.followingProgress\n    }\n}\n\nexport default connect(mapStateToProps, {follow, unfollow, getUsers})(UsersContainer)\n\n//types\ntype MapDispatchToPropsType = {\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\nexport type UsersType = UsersPageType & MapDispatchToPropsType","import React from \"react\";\n\ntype ButtonPropsType = {\n    title: string\n    callback: () => void\n}\n\nexport const Button: React.FC<ButtonPropsType> = ({title, callback}) => {\n    return (\n        <button onClick={callback}>{title}</button>\n    )\n}"],"names":["Pagination","totalItemsCount","pageSize","currentPage","portionSize","onPageChanged","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","Button","title","callback","filter","p","map","index","onClick","User","id","photos","name","followingProgress","followed","unfollow","follow","to","src","small","userPhoto","alt","disabled","some","Users","totalUsersCount","users","u","UsersContainer","this","props","getUsers","pageNumber","isFetching","Preloader","bind","React","connect","state","usersPage","isFollowing"],"sourceRoot":""}